https://www.tradingview.com/script/FsxCDGWG-SMA-Imbalance-Oscillator/

This oscillator is used for *mean reversion* strategies only.

This oscillator calculates the real-time distance of a price-point subtracted from the SMA , then compares it to the average distance to determine equilibrium imbalances. When the imbalance becomes less and goes under the signal line, a reversal is very likely.

Do not trade mean reversion during any news events.


//@version=5
indicator('SMA Imbalance Oscillator', precision=5)

var int defaultLengthRSI = 24
var int defaultRsiOverSold = 50
var int defaultRsiOverBought = 50
var int defamultSMALength = 55
var float defaultImbalanceMultiplier = 2.0
var int defaultImbalanceDetectionLevel = 50

imbalanceMultiplier = input.float(defval = defaultImbalanceMultiplier, step = 0.2, title = 'Imbalance Multiplier')
imbalanceDetectionLevel = input.int(defval = defaultImbalanceDetectionLevel, step = 5, title = 'Imbalance Detection Level')

rsiSrc = input(close, title='RSI Source', group='Strategy Settings', inline = 'Filter entries')
rsiOverSold = input.int(defaultRsiOverSold, title='RSI OS level', minval=0, step=5, group='Strategy Settings', inline = 'Filter entries')
rsiOverBought = input.int(defaultRsiOverBought, title='RSI OB level', minval=0, step=5, group='Strategy Settings', inline = 'Filter entries')
rsiLength = input.int(defaultLengthRSI, minval=1, group='Strategy Settings', inline = 'Filter entries')
rsiValue = ta.rsi(rsiSrc, rsiLength)

smaLength = input(defval=defamultSMALength, title='SMA Length:')
src = input(defval=hlc3, title='SMA source:')
sma = ta.sma(src, smaLength)

iff_1 = high - sma > sma - low ? high : low
iff_2 = high < sma ? low : iff_1
pricePoint = low > sma ? high : iff_2
difference = math.abs(pricePoint - sma)

differenceTotal = 0.00000
differenceTotal := nz(differenceTotal[1]) + difference

totalCount = 0
totalCount := nz(totalCount[1]) + 1

avgDistance = differenceTotal / totalCount
Imbalance = difference - avgDistance

iff_3 = Imbalance > 0 ? color.new(#6ada48, 0) : color.new(#865fce, 0)
iff_4 = Imbalance > avgDistance ? #c57513 : iff_3
imbalanceColor = Imbalance > avgDistance * imbalanceMultiplier ? color.new(#461111, 0) : iff_4
plot(Imbalance, style=plot.style_columns, color=imbalanceColor, editable=false)


///plot signals
isOverSold = rsiValue < rsiOverSold
isOverBought = rsiValue > rsiOverBought
bgcolor(Imbalance > imbalanceDetectionLevel ? (isOverSold ? color.green : color.red) : na)

hline(0, linestyle=hline.style_solid, color=color.gray, editable=false)

